<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>ps.shanty.intellij</id>
    <name>Shanty Game Cache Config Plugin</name>
    <description><![CDATA[
        This plugin resolves Shanty game cache config YAML files to have references within them, allowing for CTRL + Click navigation to defined YAML files.
    ]]></description>
    <vendor>arham4</vendor>

    <depends>com.intellij.modules.platform</depends>
    <depends>org.jetbrains.plugins.yaml</depends>
    <depends>com.intellij.properties</depends>

    <resource-bundle>messages.ModBundle</resource-bundle>
    <resource-bundle>messages.SNTBundle</resource-bundle>

    <extensionPoints>
        <extensionPoint name="duplicateSNTEntryKeyAnnotationSuppressor"
                        interface="ps.shanty.intellij.snt.DuplicateSNTEntryKeyAnnotationSuppressor"
                        dynamic="true"/>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">

        <!-- Mod files -->
        <fileType name="Game Cache Config File" implementationClass="ps.shanty.intellij.mod.ModFileType"
                  fieldName="MOD" language="mod" extensions="mod;mod2;bas;bas2;enum;enum2;hunt;hunt2;inv;inv2;loc;loc2;maparea;maparea2;maplabel;maplabel2;mel;mel2;npc;npc2;ns;obj;obj2;param;param2;seq;seq2;struct;struct2;varbit;varbit2;varclient;varclient2;vardouble;vardouble2;varlong;varlong2;varp;varp2;varstring;varstring2"/>

        <psi.referenceContributor language="mod"
                                  implementation="ps.shanty.intellij.mod.ModReferenceContributor"/>

        <lang.parserDefinition language="mod"
                               implementationClass="ps.shanty.intellij.mod.ModParserDefinition"/>
        <quoteHandler fileType="Game Cache Config File" className="ps.shanty.intellij.mod.smart.ModQuoteHandler"/>

        <lang.elementManipulator forClass="ps.shanty.intellij.mod.psi.impl.ModPlainTextImpl"
                                 implementationClass="ps.shanty.intellij.mod.psi.impl.ModPlainTextManipulator"/>
        <lang.elementManipulator forClass="ps.shanty.intellij.mod.psi.impl.ModQuotedTextImpl"
                                 implementationClass="ps.shanty.intellij.mod.psi.impl.ModPlainTextManipulator"/>
        <lang.formatter language="mod"
                        implementationClass="ps.shanty.intellij.mod.formatter.ModFormattingModelBuilder"/>
        <lang.whiteSpaceFormattingStrategy language="mod"
                                           implementationClass="ps.shanty.intellij.mod.formatter.ModWhiteSpaceFormattingStrategy"/>
        <stripTrailingSpacesFilterFactory implementation="ps.shanty.intellij.mod.formatter.ModStripTrailingSpacesFilterFactory"/>
        <renamePsiElementProcessor implementation="ps.shanty.intellij.mod.RenameModFileProcessor"/>

        <stubElementTypeHolder externalIdPrefix="modStubElementTypeHolder"
                               class="ps.shanty.intellij.mod.Mod2ElementTypes"/>
        <stubIndex implementation="ps.shanty.intellij.mod.Mod2KeyIndex"/>

        <annotator language="mod"
                   implementationClass="ps.shanty.intellij.mod.annotator.ModSameLineCompositeValueErrorAnnotator"/>
        <typedHandler implementation="ps.shanty.intellij.mod.formatter.ModHyphenTypedHandler"/>

        <langCodeStyleSettingsProvider implementation="ps.shanty.intellij.mod.ModLanguageCodeStyleSettingsProvider"/>

        <completion.contributor language="mod" implementationClass="ps.shanty.intellij.mod.schema.ModJsonSchemaCompletionContributor"/>

        <projectService serviceImplementation="ps.shanty.intellij.mod.ModElementGenerator"/>

        <localInspection language="mod" bundle="messages.ModBundle"
                         shortName="ModInvalidGameCacheConfig"
                         key="inspections.invalid.game.cache.config" level="ERROR"
                         groupKey="inspections.group.name" enabledByDefault="true"
                         implementationClass="ps.shanty.intellij.mod.inspections.ModInvalidGameCacheConfigInspection"/>
        <localInspection language="mod" bundle="messages.ModBundle"
                         shortName="ModUnresolvedAlias"
                         key="inspections.unresolved.alias.name" level="ERROR"
                         groupKey="inspections.group.name" enabledByDefault="true"
                         implementationClass="ps.shanty.intellij.mod.inspections.ModUnresolvedAliasInspection"/>
        <localInspection language="mod" bundle="messages.ModBundle"
                         shortName="ModRecursiveAlias"
                         key="inspections.recursive.alias.name" level="ERROR"
                         groupKey="inspections.group.name" enabledByDefault="true"
                         implementationClass="ps.shanty.intellij.mod.inspections.ModRecursiveAliasInspection"/>
        <localInspection language="mod" bundle="messages.ModBundle"
                         shortName="ModDuplicatedKeys" level="ERROR"
                         key="inspections.duplicated.keys.name"
                         groupKey="inspections.group.name" enabledByDefault="true"
                         implementationClass="ps.shanty.intellij.mod.inspections.ModDuplicatedKeysInspection"/>
        <localInspection language="mod" bundle="messages.ModBundle"
                         shortName="ModUnusedAnchor"
                         key="inspections.unused.anchor.name" level="WARNING"
                         groupKey="inspections.group.name" enabledByDefault="true"
                         implementationClass="ps.shanty.intellij.mod.inspections.ModUnusedAnchorInspection"/>

        <localInspection language="mod" bundle="messages.ModBundle"
                         shortName="ModSchemaValidation"
                         key="inspections.schema.validation.name"
                         groupKey="inspections.group.name"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="ps.shanty.intellij.mod.schema.ModJsonSchemaHighlightingInspection"/>
        <localInspection language="mod" bundle="messages.ModBundle"
                         shortName="ModSchemaDeprecation"
                         key="inspections.schema.deprecation.name"
                         groupKey="inspections.group.name"
                         enabledByDefault="true"
                         level="WEAK WARNING"
                         implementationClass="ps.shanty.intellij.mod.schema.ModJsonSchemaDeprecationInspection"/>

        <!-- SNT files -->
        <fileType name="Shanty Name Table File" implementationClass="ps.shanty.intellij.snt.SNTFileType"
                  fieldName="SNT" language="snt" extensions="snt"/>

        <lang.parserDefinition language="snt"
                               implementationClass="ps.shanty.intellij.snt.SNTParserDefinition"/>
        <lang.syntaxHighlighter language="snt" implementationClass="ps.shanty.intellij.snt.formatter.SNTHighlighter"/>
        <stripTrailingSpacesFilterFactory implementation="ps.shanty.intellij.snt.formatter.SNTStripTrailingSpacesFilterFactory"/>

        <stubElementTypeHolder externalIdPrefix="sntStubElementTypeHolder"
                               class="ps.shanty.intellij.snt.SNTElementTypes"/>
        <stubIndex implementation="ps.shanty.intellij.snt.SNTKeyIndex"/>

        <langCodeStyleSettingsProvider implementation="ps.shanty.intellij.snt.SNTLanguageCodeStyleSettingsProvider"/>
        <lang.formatter language="snt" implementationClass="ps.shanty.intellij.snt.formatter.SNTFormattingModelBuilder"/>

        <annotator language="snt" implementationClass="ps.shanty.intellij.snt.SNTAnnotator"/>

        <!-- copied from YAML's plugin.xml for mod files -->
        <additionalTextAttributes scheme="Default" file="colorSchemes/YAMLDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/YAMLDarcula.xml"/>

        <lang.commenter language="mod" implementationClass="org.jetbrains.yaml.YAMLCommenter"/>
        <lang.syntaxHighlighterFactory language="mod"
                                       implementationClass="org.jetbrains.yaml.YAMLSyntaxHighlighterFactory"/>
        <lang.braceMatcher language="mod" implementationClass="org.jetbrains.yaml.YAMLPairedBraceMatcher"/>
        <lang.foldingBuilder language="mod" id="ModFoldingBuilder"
                             implementationClass="org.jetbrains.yaml.folding.YAMLFoldingBuilder"/>
        <editor.backspaceModeOverride language="mod"
                                      implementationClass="com.intellij.codeInsight.editorActions.SmartBackspaceDisabler"/>
        <lang.psiStructureViewFactory language="mod"
                                      implementationClass="org.jetbrains.yaml.structureView.YAMLStructureViewFactory"/>
        <lang.documentationProvider language="mod"
                                    implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaDocumentationProvider"
                                    id="ModJsonSchemaDocumentationProvider"/>
        <lang.refactoringSupport language="mod"
                                 implementationClass="org.jetbrains.yaml.resolve.YAMLRefactoringSupportProvider"/>
        <languageInjectionContributor implementationClass="org.jetbrains.yaml.schema.YamlJsonSchemaLanguageInjector"
                                      language="mod"/>
        <languageInjectionPerformer implementationClass="org.jetbrains.yaml.YamlLanguageInjectionPerformer"
                                    language="mod"/>

        <!-- copied from Propertie's plugin.xml for snt files -->
        <lang.refactoringSupport language="snt"
                                 implementationClass="com.intellij.lang.properties.refactoring.PropertiesRefactoringSupportProvider"/>
        <lang.documentationProvider language="snt" implementationClass="com.intellij.lang.properties.PropertiesDocumentationProvider"/>
        <lang.findUsagesProvider language="snt"
                                 implementationClass="com.intellij.lang.properties.findUsages.PropertiesFindUsagesProvider"/>
        <codeInsight.wordCompletionFilter language="snt"
                                          implementationClass="com.intellij.lang.properties.PropertiesWordCompletionFilter"/>
        <lang.psiStructureViewFactory language="snt"
                                      implementationClass="com.intellij.lang.properties.structureView.PropertiesStructureViewBuilderFactory"/>
        <lang.ast.factory language="snt" implementationClass="com.intellij.lang.properties.psi.impl.PropertiesASTFactory"/>

        <lang.commenter language="snt" implementationClass="com.intellij.lang.properties.PropertiesCommenter"/>
        <lang.namesValidator language="snt" implementationClass="com.intellij.lang.properties.PropertiesNamesValidator"/>

        <idIndexer filetype="Shanty Name Table File" implementationClass="com.intellij.lang.properties.idCache.PropertiesIdIndexer"/>
        <todoIndexer filetype="Shanty Name Table File" implementationClass="com.intellij.lang.properties.idCache.PropertiesTodoIndexer"/>

        <spellchecker.support language="snt"
                              id="propertiesSpellcheckingStrategy"
                              implementationClass="com.intellij.lang.properties.spellchecker.PropertiesSpellcheckingStrategy"/>

        <lang.foldingBuilder language="snt" implementationClass="com.intellij.lang.properties.editor.PropertiesFoldingBuilder"/>

        <lang.inspectionSuppressor language="snt" implementationClass="com.intellij.lang.properties.codeInspection.PropertiesInspectionSuppressor"/>

        <intentionAction>
            <className>ps.shanty.intellij.snt.actions.CopyPropertyValueToClipboardIntention</className>
            <bundleName>messages.PropertiesBundle</bundleName>
            <categoryKey>intention.category.properties</categoryKey>
        </intentionAction>

        <intentionAction>
            <className>ps.shanty.intellij.snt.actions.CopyPropertyKeyToClipboardIntention</className>
            <bundleName>messages.PropertiesBundle</bundleName>
            <categoryKey>intention.category.properties</categoryKey>
        </intentionAction>
    </extensions>

</idea-plugin>
